#!/usr/bin/bash

#Environment Name
[ ! -f ../.envtype ] && echo -n "Env Name: " && read ENVTYPE && echo "$ENVTYPE" >../.envtype

#register rhsm
subscription-manager register --org=4508688 --auto-attach 2>/dev/null

#enable redhat yum repos
subscription-manager repos --enable=rhel-7-server-rpms
subscription-manager repos --enable=rhel-7-server-extras-rpms

#enable docker repo
yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo

#install required packages
yum -y install net-tools yum-langpacks gtk3 ksh wget firewalld tigervnc-server-minimal mailx nmap time bridge-utils device-mapper-libs device-mapper-event-libs ntp lorax anaconda-tui unzip

# sync time
ntpdate pool.ntp.org

# set timezone
timedatectl set-timezone America/Chicago

# install dcoker
wget https://download.docker.com/linux/rhel/docker-ce.repo
mv docker-ce.repo /etc/yum.repos.d
yum -y install docker-ce docker-ce-cli containerd.io

#install vpn client software
wget http://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
yum -y install strongswan xl2tpd NetworkManager-strongswan strongswan-libipsec
rm -f ./epel-release-latest-7.noarch.rpm

#ip port forwarding
[ "`grep net.ipv4.ip_forward /etc/sysctl.conf`" == "" ] &&  echo "net.ipv4.ip_forward = 1">>/etc/sysctl.conf &&  sysctl -p /etc/sysctl.conf && systemctl restart network.service

#add redhat container registry
echo "ADD_REGISTRY='--add-registry registry.access.redhat.com'">>/etc/sysconfig/docker

#copy in port forwrd config for docker
cp -f ./99-docker.conf /usr/lib/sysctl.d/99-docker.conf
systemctl start docker
systemctl enable docker

# add custom cloud backup server scripts to /usr/local/bin
find . -name "*monthname.sh" -exec cp -f {} /usr/local/bin/. \;
find . -name "*recon.sh" -exec cp -f {} /usr/local/bin/. \;

# add tfsupport usr and generate keys folder, if not there.
[ ! -d /home/tfsupport ] && useradd tfsupport
[ ! -d /home/tfsupport/keys ] && mkdir /home/tfsupport/keys && chown tfsupport:tfsupport /home/tfsupport/keys

# make ssh folder if not there, and copy authorized keys from ec2-user
[ ! -d /home/tfsupport/.ssh ] && mkdir /home/tfsupport/.ssh && chown -R tfsupport:tfsupport /home/tfsupport/.ssh && chmod 700 /home/tfsupport/.ssh
[ ! -f /home/tfsupport/.ssh/authorized_keys ] && cp -f /home/ec2-user/.ssh/authorized_keys /home/tfsupport/.ssh/authorized_keys && chown tfsupport:tfsupport /home/tfsupport/.ssh/authorized_keys
 
# Add tfsupport to sudoers, if not there.
[ "`grep tfsupport /etc/sudoers`" == "" ] && echo "tfsupport        ALL=(ALL)       NOPASSWD: ALL">>/etc/sudoers

# Add Admin Menu to tfsupports .profile to be exec on login
[ "`grep MENU ~/.bash_profile`" == "" ] && echo "sudo ./MENU" >>/home/tfsupport/.bash_profile && echo "exit">>/home/tfsupport/.bash_profile

# change default home dir to /backups from now on
sed -i 's/\/home/\/backups/' /etc/default/useradd
 
# add /etc/skel/tfrsync
cp -f ./tfrsync /etc/skel/.
 
# make backups folder if its not there.
[ ! -d /backups ] && mkdir /backups
 
# Copy cloud admin scripts into place for tfsupport..
cp -rf /home/ec2-user/MSCloudServer/* /home/tfsupport/.

# lastly, update everything
yum -y update
 
echo ""
echo "Done!"
exit 0
