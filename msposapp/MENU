#!/bin/bash

TFCLOUD_VERSION="2.0"

# verify root
ID=$(/usr/bin/id -u)
[ $ID -ne 0 ] && echo "You must be root to run $0." && exit 1

ROOTDIR="$(pwd)"
export ROOTDIR

CONTAINER=`cat ./bin/.container 2>/dev/null`

trap '' 2
while :; do
	clear
    LGGRN='\033[1;32m'                                                                                                                                                                                            
    BLUE='\033[1;34m'                                                                                                                                                                                              
    GREY='\033[0;37m'                                                                                                                                                                                             
    CYAN=''                                                                                                                                                                                             
    NC='\033[0m'                                                                                                                                                                                                  
    clear                                                                                                                                                                                                         
    echo -e "${GREY}$(date +'%x %l:%M %p')${NC}"
    printf '\u250f''\u2501''\u2501''\u2501''\u2501''\u2501''\u2501''\u2501''\u2501''\n'
    echo -e "\u2503${BLUE} @ ${NC}`[ -f .envtype ] && cat .envtype || echo -e Not Installed`${NC}"
    printf '\u2503'${LGGRN}' )~ Containers'${NC}'\n'
    printf '\u2503''\u2501''\n'
    printf '\u2503'" Space    :${NC} $(df -h /backups | tail -1 | awk '{print $4}')"'\n'
    [ -f ./bin/.container ] && echo -e "\u2503 Status   : `docker ps --format "{{.Status}}" 2>/dev/null`" || echo -e "\u2503 Status   : Not running"
    echo -e "\u2503 Shopcode : `ls /home | grep -v tfsupport | grep tfpos | cut -d- -f2 2>/dev/null`${NC}"
    [ -f ./bin/.container ] && echo -e "\u2503 Terminal : ${BLUE}https://iflorist.myk.green${NC}" || echo -e "\u2503 Terminal :"
    [ "$CONTAINER" != "" ] && echo -e "\u2503 VPN      :`docker exec ${CONTAINER} strongswan status | sed -e 's/\ //' | grep === | grep -v Assoc 2>/dev/null`${NC}" || echo -e "\u2503 VPN      :"
printf '\u2503''\n'
printf '\u2503''\033[1m'"---\033[0m Container"'\n'
printf '\u2503''\033[1m'" 1.\033[0m Status"'\n'
printf '\u2503''\033[1m'" 2.\033[0m Stop"'\n'
printf '\u2503''\033[1m'" 3.\033[0m Connect"'\n'
printf '\u2503''\033[1m'" 4.\033[0m Print"'\n'
printf '\u2503''\n'
printf '\u2503''\033[1m'"----\033[0m Images"'\n'
printf '\u2503''\033[1m'" 11.\033[0m List"'\n'
printf '\u2503''\033[1m'" 12.\033[0m Build"'\n'
printf '\u2503''\033[1m'" 13.\033[0m Stage"'\n'
printf '\u2503''\033[1m'" 14.\033[0m Delete"'\n'
printf '\u2503''\033[1m'" 15.\033[0m Data"'\n'
printf '\u2503''\n'
printf '\u2503''\033[1m'"-----\033[0m VPN"'\n'
printf '\u2503''\033[1m'" 111.\033[0m Status"'\n'
printf '\u2503''\033[1m'" 112.\033[0m Create"'\n'
printf '\u2503''\033[1m'" 113.\033[0m Start"'\n'
printf '\u2503''\033[1m'" 114.\033[0m Stop"'\n'
printf '\u2503''\033[1m'" 115.\033[0m Delete"'\n'
printf '\u2503''\n'
printf '\u2503''\033[1m'"---\033[0m System"'\n'
printf '\u2503''\033[1m'" p.\033[0m Purge"'\n'
printf '\u2503''\033[1m'" i.\033[0m Install"'\n'
printf '\u2503''\033[1m'" r.\033[0m Readme"'\n'
printf '\u2503''\033[1m'" x.\033[0m Exit"'\n'
printf '\u2517''\u2501''\n'
	echo -ne "Enter selection: ${NC}"
	read selection
	case $selection in
	1)
		cd $ROOTDIR/bin
		./container_status
		echo -ne "${CYAN}Press enter to continue..${NC}"
		read
		cd -
		;;
	2)
		cd $ROOTDIR/bin
		echo -ne "${CYAN}Press enter to continue..${NC}"
		read
		./stop_container
		;;
	3)
		cd $ROOTDIR/bin
		./container_connect
		cd -
		;;
	4)
		cd $ROOTDIR/bin
		./list_nics
		echo -ne "${CYAN}Press enter to continue..${NC}"
		read
		cd -
		;;
	p)
		cd $ROOTDIR/bin
		./prune-docker
		CONTAINER=`cat ./bin/.container 2>/dev/null`
		echo -ne "${CYAN}Press enter to continue..${NC}"
		read
		cd -
		;;
	12)
		cd $ROOTDIR/bin
		time ./create-base-image
		echo -ne "${CYAN}Press enter to continue..${NC}"
		read
		cd -
		;;
	13)
		cd $ROOTDIR/bin
		time ./stage-image
		echo -ne "${CYAN}Press enter to continue..${NC}"
		read
		cd -
		;;
	11)
		cd $ROOTDIR/bin
		./list_image
		echo -ne "${CYAN}Press enter to continue..${NC}"
		read
		cd -
		;;
	14)
		cd $ROOTDIR/bin
		./wipe_images
		echo -ne "${CYAN}Press enter to continue..${NC}"
		read
		cd -
		;;
	15)
		cd $ROOTDIR/bin
		./ssh_sudo.expect 172.17.0.2 root password 'cd /root ; lpr -P istar sample.txt'
		echo -ne "${CYAN}Press enter to continue..${NC}"
		read
		cd -
		;;
	111)
		cd $ROOTDIR/bin
		./list_vpns
		echo -ne "${CYAN}Press enter to continue..${NC}"
		read
		cd -
		;;
	112)
		cd $ROOTDIR/bin
		./create_vpn
		echo -ne "${CYAN}Press enter to continue..${NC}"
		read
		cd -
		;;
	113)
		cd $ROOTDIR/bin
		./start_vpn
		echo -ne "${CYAN}Press enter to continue..${NC}"
		read
		cd -
		;;
	114)
		cd $ROOTDIR/bin
		./stop_vpn
		echo -ne "${CYAN}Press enter to continue..${NC}"
		read
		cd -
		;;
	115)
		cd $ROOTDIR/bin
		./delete_vpn
		echo -ne "${CYAN}Press enter to continue..${NC}"
		read
		cd -
		;;
	i)
		cd $ROOTDIR/bin
		echo -e "${CYAN}"
		time ./install
		echo -ne "Press enter to continue..${NC}"
		read
		cd -
		;;
	r)
		cat ./README.md | more
		echo -ne "Press enter to continue..${NC}"
		read
		;;
	x) exit ;;
	*) ;;
	esac
done
