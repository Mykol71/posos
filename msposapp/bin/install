#!/usr/bin/bash

#Set Host User
HOST_USER=`whoami`

#Environment Name
[ ! -f ../.envtype ] && echo -n "Env Name: " && read ENVTYPE && echo "$ENVTYPE" >../.envtype
#POS IP
#[ ! -f .posip ] && echo -n "POS IP Adress: " && read POSIP && echo "$POSIP" >.posip
#Shopcode
#[ ! -f .shopcode ] && echo -n "POS Shop Code: " && read SHOPCODE && echo "$SHOPCODE" >.shopcode

#install required packages
yum clean all
yum -y install net-tools yum-langpacks gtk3 ksh wget firewalld tigervnc-server-minimal mailx nmap time bridge-utils docker device-mapper-libs device-mapper-event-libs ntp lorax anaconda-tui unzip expect

# sync time
ntpdate pool.ntp.org

# set timezone
timedatectl set-timezone America/Chicago

#install vpn client software
yum -y install epel-release
yum -y install strongswan xl2tpd NetworkManager-strongswan strongswan-libipsec

#ip port forwarding
[ "`grep net.ipv4.ip_forward /etc/sysctl.conf`" == "" ] &&  echo "net.ipv4.ip_forward = 1">>/etc/sysctl.conf &&  sysctl -p /etc/sysctl.conf && systemctl restart network.service

#disable consistant network naming
rpm -qa | grep -e '^systemd-[0-9]\+\|^udev-[0-9]\+'
sed -i '/^GRUB\_CMDLINE\_LINUX/s/\"$/\ net\.ifnames\=0\"/' /etc/default/grub
grub2-mkconfig -o /boot/grub2/grub.cfg

#copy in port forwrd config for docker
cp -f ./99-docker.conf /usr/lib/sysctl.d/99-docker.conf
systemctl restart docker 2>/dev/null
systemctl enable docker

# add custom cloud backup server scripts to /usr/local/bin
find . -name "*monthname.sh" -exec cp -f {} /usr/local/bin/. \;
find . -name "*recon.sh" -exec cp -f {} /usr/local/bin/. \;
find . -name "shellinaboxd" -exec cp -f {} /usr/local/bin/. \;

# add tfsupport usr and generate keys folder, if not there.
[ ! -d /home/tfsupport ] && useradd tfsupport
[ ! -d /home/tfsupport/keys ] && mkdir /home/tfsupport/keys && chown tfsupport:tfsupport /home/tfsupport/keys

# make ssh folder if not there, and copy authorized keys from centos user
[ ! -d /home/tfsupport/.ssh ] && mkdir /home/tfsupport/.ssh && chown -R tfsupport:tfsupport /home/tfsupport/.ssh && chmod 700 /home/tfsupport/.ssh
[ ! -f /home/tfsupport/.ssh/authorized_keys ] && cp -f /home/${HOST_USER}/.ssh/authorized_keys /home/tfsupport/.ssh/authorized_keys && chown tfsupport:tfsupport /home/tfsupport/.ssh/authorized_keys
 
# Add tfsupport to sudoers, if not there.
[ "`grep tfsupport /etc/sudoers`" == "" ] && echo "tfsupport        ALL=(ALL)       NOPASSWD: ALL">>/etc/sudoers
[ "`grep ${HOST_USER} /etc/sudoers`" == "" ] && echo "${HOST_USER}        ALL=(ALL)       NOPASSWD: ALL">>/etc/sudoers

# Add Admin Menu to current users .bash_profile to be exec on login
#[ "`grep msposapp /home/${HOST_USER}/.bash_profile`" == "" ] && echo "cd posos" >> /home/${HOST_USER}/.bash_profile && echo "sudo ./MENU" >>/home/${HOST_USER}/.bash_profile

# change default home dir to /backups from now on
# Dont do this unless cloud backup dedicated server as well
sed -i 's/\/home/\/backups/' /etc/default/useradd
 
# add /etc/skel/tfrsync
#cp -f ./tfrsync /etc/skel/.
 
# make backups folder if its not there.
[ ! -d /backups ] && mkdir /backups
 
# lastly, update everything
yum -y update
 
echo ""
echo ""
echo "Done!"

# if the system has not been rebooted after install, then do so.
[ ! -f _msposapp ] && echo "The system will reboot in 10 secs......please log back in with the same credentials." && touch _msposapp && sleep 10 && reboot

exit 0
