#!/bin/bash


OSVERSION=`cat .osversion`
OS="centos${OSVERSION}"
echo -n "daisy, rti, or minimal?: "
OSVERSION=`cat .osversion`
read POSTYPE
[ "$POSTYPE" == "" ] && exit 0
[ "$POSTYPE" == "daisy" ] && POSDIR="d"
[ "$POSTYPE" == "rti" ] && POSDIR="usr2"
[ "$POSTYPE" == "minimal" ] && POSDIR="minimal"
echo -n "SHOPCODE: "
read SHOPCODE
echo ${SHOPCODE}>.shopcode

# get POS IP
POSIP=`/usr/sbin/ifconfig eth1 | grep broad | sed -e 's/    //g' | cut -d ' ' -f2`
echo $POSIP > .posip

# get GW
DEFAULT_GW=`route -n | grep 'UG[ \t]' | awk '{print $2}'`

# add POS users
useradd -b /home tfpos-${SHOPCODE}
useradd -b /home tfpos-${SHOPCODE}-tfsupport

# add profile changes to container
[ "`grep 172.17.0.2 /home/tfpos-${SHOPCODE}/.bash_profile`" == "" ] && echo "ssh daisy@172.17.0.2" >> /home/tfpos-${SHOPCODE}/.bash_profile
[ "`grep 172.17.0.2 /home/tfpos-${SHOPCODE}-tfsupport/.bash_profile`" == "" ] && echo "ssh tfsupport@172.17.0.2" >> /home/tfpos-${SHOPCODE}-tfsupport/.bash_profile

# start container
CONTAINER=`docker run -d -it --name=${SHOPCODE}.teleflora.com --rm --privileged -v "/home/tfpos-${SHOPCODE}/${POSDIR}:/${POSDIR}" -v /sys/fs/cgroup:/sys/fs/cgroup:ro -w="/${POSDIR}" -i ${OS}-${POSTYPE} /usr/sbin/init`
echo ${CONTAINER}>.container

docker exec ${CONTAINER} ln -sf /run/systemd/journal/dev-log /dev/log

# isolate POS IP to the container
./pipework --direct-phys eth1 ${CONTAINER} ${POSIP}/24@$DEFAULT_GW

# copy over staging media
[ "$POSTYPE" == "daisy" ] && cp /home/daisy/*.iso /home/tfpos-$SHOPCODE/$POSDIR/. && cp /home/daisy/*.gz /home/tfpos-$SHOPCODE/$POSDIR/. &&  cp /home/daisy/*.sh /home/tfpos-$SHOPCODE/$POSDIR/.
[ "$POSTYPE" == "rti" ] && cp /home/rti/ostools-1.15-latest.tar.gz /home/tfpos-$SHOPCODE/$POSDIR/. 

docker exec $CONTAINER ln -s /usr/bin /bin

# lang set
docker exec $CONTAINER echo LANG=en_US.UTF-8 >/etc/locale.conf

# work around to fool ostools and pos app installs into thinking centos8 is 7.
[ "$POSTYPE" == "daisy" ] && [ "$OSVERSION" == "8" ] && docker exec ${CONTAINER} cp /etc/centos-release /etc/centos-release.orig
[ "$POSTYPE" == "daisy" ] && [ "$OSVERSION" == "8" ] && docker cp ./redhat-release-7 ${CONTAINER}:/etc/centos-release 

# install ostools
[ "$POSTYPE" != "minimal" ] && docker exec $CONTAINER tar xvfz ./ostools-1.15-latest.tar.gz
[ "$POSTYPE" != "minimal" ] && docker exec $CONTAINER ./bin/install-ostools.pl ./ostools-1.15-latest.tar.gz --noharden-linux

# configure system hostname
docker exec $CONTAINER hostnamectl set-hostname ${SHOPCODE}.teleflora.com 2>/dev/null

# prepare for daisy
[ "$POSTYPE" == "daisy" ] && docker exec $CONTAINER ./bin/updateos.pl --daisy8

# install daisy
[ "$POSTYPE" == "daisy" ] && docker exec $CONTAINER mkdir /mnt/cdrom
[ "$POSTYPE" == "daisy" ] && [ "$OSVERSION" == "7" ] && docker exec $CONTAINER mount -o loop daisy_10.1.22_rhel7.iso /mnt/cdrom
[ "$POSTYPE" == "daisy" ] && [ "$OSVERSION" == "8" ] && docker exec $CONTAINER mount -o loop daisy_10.1.24_centos8.iso /mnt/cdrom
[ "$POSTYPE" == "daisy" ] && docker exec $CONTAINER cp /mnt/cdrom/install-daisy.pl .
[ "$POSTYPE" == "daisy" ] && docker exec $CONTAINER ./install-daisy.pl /d/daisy
[ "$POSTYPE" == "daisy" ] && docker exec $CONTAINER umount /mnt/cdrom
[ "$POSTYPE" == "daisy" ] && [ "$OSVERSION" == "8" ] && docker exec cp /etc/centos-release.orig /etc/centos-release

# remove console gttys for daisy because this is a cloud server
[ "$POSTYPE" == "daisy" ] && docker exec $CONTAINER rm -f /etc/systemd/system/*tty* 2>/dev/null

# move off hosts.deny
[ "$POSTYPE" != "minimal" ] && docker exec $CONTAINER mv /etc/hosts.deny /etc/hosts.deny.orig

# install vpn software into container
docker exec $CONTAINER yum -y install epel-release
docker exec $CONTAINER yum -y install strongswan strongswan-libipsec libreswan rpm

# install receipt printer drivers
#docker cp ./istar.ppd ${CONTAINER}:/etc/cups/ppd
#docker cp ./istar.rpm ${CONTAINER}:/tmp
#docker exec $CONTAINER rpm -i /tmp/istar.rpm

# create container vpn if desired
echo -n "Create Primary VPN for this POS? (y/n): "
read PRIMARY_VPN
[ "$PRIMARY_VPN" == "y" ] && ./create_vpn

# start services on container
[ "$POSTYPE" != "minimal" ] && docker exec $CONTAINER systemctl start crond
[ "$POSTYPE" != "minimal" ] && docker exec $CONTAINER systemctl start sendmail
[ "$POSTYPE" != "minimal" ] && docker exec $CONTAINER systemctl enable  crond
[ "$POSTYPE" != "minimal" ] && docker exec $CONTAINER systemctl enable sendmail

# update OS on container
docker exec $CONTAINER yum -y update

# start shellinabox on container
#docker exec $CONTAINER /usr/local/bin/shellinaboxd -s /:SSH -p 80 -b

# save container
docker commit $CONTAINER $SHOPCODE.teleflora.com

echo "---"
echo "${OS}7-$POSTYPE-$SHOPCODE instance is ready!"
echo "---"
[ "$POSTYPE" != "minimal" ] && docker exec $CONTAINER ./bin/updateos.pl --version
docker exec $CONTAINER cat /etc/redhat-release
echo "---"
exit 0
