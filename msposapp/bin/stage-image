#!/bin/bash

OS=centos
echo -n "daisy or rti?: "
read POSTYPE
[ "$POSTYPE" == "daisy" ] && VER="10.1.21" && POSDIR="d"
[ "$POSTYPE" == "rti" ] && VER="16.1.3" && POSDIR="usr2"
#[ "$POSIP" == "" ] && echo -n "POS IP " && read POSIP
echo -n "SHOPCODE: "
read SHOPCODE
echo ${SHOPCODE}>.shopcode

#get IP
POSIP=`/usr/sbin/ifconfig eth1 | grep broad | sed -e 's/    //g' | cut -d ' ' -f2`
echo $POSIP > .posip

#add POS users
useradd -b /home tfpos-${SHOPCODE}
useradd -b /home tfpos-${SHOPCODE}-tfsupport

#add profile changes to outerhost
[ "`grep 172.17.0.2 /home/tfpos-${SHOPCODE}/.bash_profile`" == "" ] && echo "ssh daisy@172.17.0.2" >> /home/tfpos-${SHOPCODE}/.bash_profile
[ "`grep 172.17.0.2 /home/tfpos-${SHOPCODE}-tfsupport/.bash_profile`" == "" ] && echo "ssh tfsupport@172.17.0.2" >> /home/tfpos-${SHOPCODE}-tfsupport/.bash_profile

#start container
CONTAINER=`docker run -d -it --name=${SHOPCODE}.teleflora.com --rm --privileged -v "/home/tfpos-${SHOPCODE}/${POSDIR}:/${POSDIR}" -v /sys/fs/cgroup:/sys/fs/cgroup:ro -w="/${POSDIR}" -i ${OS}7-${POSTYPE}-${VER} /usr/sbin/init`
echo ${CONTAINER}>.container

#configure the second nic for host networking by passing eth1 through to the container
./pipework --direct-phys eth1 ${CONTAINER} ${POSIP}/24@192.168.222.1

#copy over media
[ "$POSTYPE" == "daisy" ] && cp /home/daisy/*.iso /home/tfpos-$SHOPCODE/$POSDIR/. && cp /home/daisy/*.gz /home/tfpos-$SHOPCODE/$POSDIR/. &&  cp /home/daisy/*.sh /home/tfpos-$SHOPCODE/$POSDIR/.
[ "$POSTYPE" == "rti" ] && cp /home/rti/ostools-1.15-latest.tar.gz /home/tfpos-$SHOPCODE/$POSDIR/. 
cp ./shellinaboxd /home/tfpos-$SHOPCODE/$POSDIR/.
docker exec $CONTAINER mv ./shellinaboxd /usr/local/bin

#changed from /bin to /usr/bin at some point. Created link to avoid problems with other scripts and programs.
docker exec $CONTAINER ln -s /usr/bin /bin

#lang set
docker exec $CONTAINER echo LANG=en_US.UTF-8 >/etc/locale.conf

#Make loop back device in container so we can mount isos inside the container
docker exec $CONTAINER mknod /dev/loop b 7 0

#install ostools
docker exec $CONTAINER tar xvfz ./ostools-1.15-latest.tar.gz
docker exec $CONTAINER ./bin/install-ostools.pl ./ostools-1.15-latest.tar.gz --noharden-linux

#configure system hostname
docker exec $CONTAINER hostnamectl set-hostname ${SHOPCODE}.teleflora.com 2>/dev/null

#prepare for daisy
[ "$POSTYPE" == "daisy" ] && docker exec $CONTAINER ./bin/updateos.pl --daisy8

#install daisy
[ "$POSTYPE" == "daisy" ] && docker exec $CONTAINER mkdir /mnt/cdrom
[ "$POSTYPE" == "daisy" ] && docker exec $CONTAINER mount -o loop daisy_10.1.22_rhel7.iso /mnt/cdrom
[ "$POSTYPE" == "daisy" ] && docker exec $CONTAINER cp /mnt/cdrom/install-daisy.pl .
[ "$POSTYPE" == "daisy" ] && docker exec $CONTAINER ./install-daisy.pl /d/daisy
[ "$POSTYPE" == "daisy" ] && docker exec $CONTAINER umount /mnt/cdrom

#remove console gttys for daisy because this is a cloud server
[ "$POSTYPE" == daisy ] && docker exect $CONTAINER rm -f /etc/systemd/system/*tty* 2>/dev/null

#move off hosts.deny
docker exec $CONTAINER mv /etc/hosts.deny /etc/hosts.deny.orig

#install vpn software
docker exec $CONTAINER yum -y install epel-release
docker exec $CONTAINER yum -y install strongswan strongswan-libipsec

#install receipt printer drivers
#docker cp ./istar.ppd ${CONTAINER}:/etc/cups/ppd
#docker cp ./istar.rpm ${CONTAINER}:/tmp
#docker exec $CONTAINER rpm -i /tmp/istar.rpm

#create store vpn if desired
echo -n "Create Primary VPN for this POS? (y/n): "
read PRIMARY_VPN
[ "$PRIMARY_VPN" == "y" ] && ./create_vpn && docker exec ${CONTAINER} strongswan start

#add container hostname to /etc/hosts
#echo "172.17.0.2	${SHOPCODE} ${SHOPCODE}.teleflora.com">>/etc/hosts

#start services
docker exec $CONTAINER systemctl start crond
docker exec $CONTAINER systemctl start sendmail
docker exec $CONTAINER chkconfig on crond
docker exec $CONTAINER chkconfig on sendmail

#update OS
docker exec $CONTAINER yum -y update

#start shellinabox in container
#docker exec $CONTAINER /usr/local/bin/shellinaboxd -s /:SSH -p 80 -b

#save/export container
docker commit $CONTAINER $SHOPCODE.teleflora.com

#Done
echo "---"
echo "${OS}7-$POSTYPE-$SHOPCODE instance is ready!"
echo "---"
docker exec $CONTAINER ./bin/updateos.pl --version
docker exec $CONTAINER cat /etc/redhat-release
echo "---"
exit 0
